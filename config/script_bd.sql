CREATE DATABASE TRACO_PERFEITO;
USE TRACO_PERFEITO;

-- Tabela de Usuários (geral 
CREATE TABLE USUARIOS (
    ID_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME_USUARIO VARCHAR(70) NOT NULL,
    EMAIL_USUARIO VARCHAR(100) UNIQUE NOT NULL,
    CELULAR_USUARIO CHAR(11) UNIQUE NOT NULL,
    SENHA_USUARIO VARCHAR(255) NOT NULL,
    CPF_USUARIO CHAR(11) UNIQUE NOT NULL,
    DATA_NASC_USUARIO DATE NOT NULL,
    FOTO_PERFIL_USUARIO LONGBLOB,
    IMG_BANNER_USUARIO LONGBLOB,
    TIPO_USUARIO ENUM('comum', 'profissional', 'admnistrador') NOT NULL,
    STATUS_USUARIO ENUM('ativo', 'inativo', 'suspenso') NOT NULL DEFAULT 'ativo'
);

-- Tabela de Usuários Profissionais (Herdando de Usuários)
CREATE TABLE USUARIO_PROFISSIONAL (
    ID_USUARIO INT PRIMARY KEY,
    DIPLOMA_DESIGNER LONGBLOB,
    ESPECIALIZACAO_DESIGNER VARCHAR(70),
    DESCRICAO_PERFIL_DESIGNER VARCHAR(1000),
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);

-- Tabela de Portfólios
CREATE TABLE PORTFOLIOS (
    ID_PORTFOLIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME_PORTFOLIO VARCHAR(70) NOT NULL,
    ID_USUARIO INT NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);

-- Tabela de Propostas de Projetos
CREATE TABLE PROPOSTA_PROJETO (
    ID_PROPOSTA INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT NOT NULL,
    DATA_PROPOSTA DATE NOT NULL,
    TITULO_PROPOSTA VARCHAR(70) NOT NULL,
    DESCRICAO_PROPOSTA TEXT NOT NULL,
    STATUS_PROPOSTA ENUM('Aberta', 'Fechada', 'Expirada') NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);

-- Tabela de Publicações Profissionais (projetos)
CREATE TABLE PUBLICACOES_PROFISSIONAL (
    ID_PUBLICACAO INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT NOT NULL,
    NOME_PUBLICACAO VARCHAR(70) NOT NULL,
    DESCRICAO_PUBLICACAO TEXT NOT NULL,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);

-- Tabela de Conteúdos de Publicações Profissionais (Imagens)
CREATE TABLE CONTEUDOS_PUBLICACAO_PROFISSIONAL (
    ID_PUBLICACAO INT NOT NULL,
	IMG_PUBLICACAO LONGBLOB,
    FOREIGN KEY (ID_PUBLICACAO) REFERENCES PUBLICACOES_PROFISSIONAL(ID_PUBLICACAO) ON DELETE CASCADE
);

CREATE TABLE PUBLICACAO_PORTFOLIO ( -- faz a ligação entre publicações e portfólios
    ID_PUBLICACAO INT NOT NULL,
    ID_PORTFOLIO INT NOT NULL,
    PRIMARY KEY (ID_PUBLICACAO, ID_PORTFOLIO),  -- Chave composta = combinação publicação + portfólio não pode se repetir
    FOREIGN KEY (ID_PUBLICACAO) REFERENCES PUBLICACOES_PROFISSIONAL(ID_PUBLICACAO) ON DELETE CASCADE,
    FOREIGN KEY (ID_PORTFOLIO) REFERENCES PORTFOLIOS(ID_PORTFOLIO) ON DELETE CASCADE
);

-- Tabela de Comentários
CREATE TABLE COMENTARIOS (
    ID_COMENTARIO INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO INT NOT NULL,
    ID_PUBLICACAO INT NOT NULL,
    CONTEUDO_COMENTARIO TEXT NOT NULL, -- ver se vai usar text ou varchar par comentarios
    DATA_COMENTARIO DATETIME DEFAULT CURRENT_TIMESTAMP, -- current_timestap fará com que data e hora sejam inseridos automaticamente
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (ID_PUBLICACAO) REFERENCES PUBLICACOES_PROFISSIONAL(ID_PUBLICACAO) ON DELETE CASCADE
);

-- Tabela de Chats (Conversas entre usuários)
CREATE TABLE CHATS (
    ID_CHAT INT PRIMARY KEY AUTO_INCREMENT,
    ID_USUARIO_1 INT NOT NULL,
    ID_USUARIO_2 INT NOT NULL,
    FOREIGN KEY (ID_USUARIO_1) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (ID_USUARIO_2) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);

-- Tabela de Mensagens
CREATE TABLE MENSAGENS (
    ID_MSG INT PRIMARY KEY AUTO_INCREMENT,
    ID_CHAT INT NOT NULL,
    REMETENTE_MSG INT NOT NULL,
    DESTINATARIO_MSG INT NOT NULL, -- ???
    CONTEUDO_MSG TEXT NOT NULL, -- Como fazer para que usuários enviem imagens??
    DATA_MSG DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_CHAT) REFERENCES CHATS(ID_CHAT) ON DELETE CASCADE,
    FOREIGN KEY (REMETENTE_MSG) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE,
    FOREIGN KEY (DESTINATARIO_MSG) REFERENCES USUARIOS(ID_USUARIO) ON DELETE CASCADE
);
